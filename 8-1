#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TITLE_SIZE 50
#define MAX_CONTENT_SIZE 500

typedef struct {
    char *title;
    char *content;
} DiaryEntry;


char* read_line() {
	char *line = NULL, temp;
	size_t size = 0, index = 0;
	
	line = malloc(MAX_CONTENT_SIZE);
    if (line==0) {
        return 0;
    }
    gets(line);
	return line;
}

DiaryEntry* add_entry(DiaryEntry *entries, int *entry_count) {
	printf("Enter title: ");
	char *title = read_line();

	printf("Enter content: ");
	char *content = read_line();
	entries = realloc(entries, (*entry_count + 1) * sizeof(DiaryEntry));
	
	entries[*entry_count].title=title;
	entries[*entry_count].content=content;
	
	memcpy(entries[*entry_count].title,title,sizeof(*title)+1);
	memcpy(entries[*entry_count].content,content,sizeof(*content)+1);
		
	*entry_count+=1;//일기장 갯수 추가
	
	return entries;
}

void view_entries(DiaryEntry *entries, int entry_count) {
	for(int i=0;i<entry_count;i++){
		printf("%s\n",entries[i].title);
		printf("%s\n",entries[i].content);
	}
}

void free_entries(DiaryEntry *entries, int entry_count) {
	for(int i=0;i<entry_count;i++){
		free(entries[i].title);
		free(entries[i].content);
	}
	free(entries);
}


int main() {
	DiaryEntry *entries = NULL;
	int entry_count = 0;
	int choice;

	do {
		printf("\n1. Add Entry\n2. View Entries\n3. Exit\nEnter choice: ");
		scanf("%d", &choice);
		getchar(); // remove the newline

		switch (choice) {
			case 1:
				entries = add_entry(entries, &entry_count);
				break;
			case 2:
				view_entries(entries, entry_count);
				break;
			case 3:
				free_entries(entries, entry_count);
				printf("Exiting program.\n");
				break;
			default:
				printf("Invalid choice.\n");
		}
	} while (choice != 3);

	return 0;
}
