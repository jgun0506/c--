#include <stdio.h>
#include <stdlib.h>

#define END_MARK	-1
#define MAX_SIZE	10000


int nums_size(int* nums) {
	int size = 0;
	while (*nums>0) {
		size++;
		nums++;
	}
	return size;
}

void swap(int* a, int* b) {
	int tp = *a;
	*a = *b;
	*b = tp;
	return;
}

//내림차순으로 정렬하는 함수
void int_sort(int* nums) {
	int size = nums_size(nums);

	int end = size - 1;

	for (int i = 0; i < size - 1; i++) {
		for (int j = 0; j < end; j++) {
			if (*(nums + j) < *(nums + j + 1))
				swap(nums + j, nums + j + 1);
		}
		end--;
	}
	return;

}


int get_kth_largest(int* nums, int k) {
	int size = nums_size(nums);

	
	int_sort(nums);

	if (k >= 1 && size >= k) {
		return *(nums + k - 1);
	}

	return -1;
}


void main() {
	int k;
	int nums[] = { 1,4,7,8,5,2,3,6,9,-1 };

	scanf("%d", &k);

	printf("%d", get_kth_largest(nums, k));

}

