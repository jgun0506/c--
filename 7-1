#include <stdio.h>
#include <stdlib.h>

#define END_MARK	-1
#define MAX_SIZE	10000

int compare(int a, int b) {
	return b - a;
}

int* find_max(int* nums) {
	int* pmax = nums;
	int* pcur = nums + 1;

	while (*pcur != -1) {
		if (compare(*pcur, *pmax) < 0) {
			pmax = pcur;
		}
		pcur++;
	}
	return pmax;
}
void swap_int(int* a, int* b) {
	int tp = *a;
	*a = *b;
	*b = tp;
}

void numsort(int* nums) {//내림차순으로 정렬
	int* num_cur = nums;

	while (*num_cur != -1) {
		int* num_max = find_max(num_cur);
		if (*num_cur != *num_max)
			swap_int(num_cur, num_max);
		num_cur++;
	}
	return;
}

int get_kth_largest(int* nums, int k) {
	int size = 0;
	while (*nums>0) {//여기부터
		size++;
		nums++;
	}
	nums -= size;

	if (k<1 || k>size) {
		return -1;
	}
	numsort(nums);

	return *(nums + k - 1);
}


int main() {
	int nums[] = { 1,2,3,4,5,6,8,9,-1 };
	int x = get_kth_largest(nums, 3);
	printf("%d asd", x);
}
